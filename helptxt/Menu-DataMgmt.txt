
[TOC]

# DataMgmt

## Link to External Excel Data...
Link to an external Excel file containing additional rider data.

This option opens up a Wizard to configure a link to an Excel sheet.  The Excel sheet must have a header row with the column names.  The Wizard takes you through the following steps:

1. Choose the Excel workbook containing your additional data.
1. Choose the sheet within the Excel workbook.
1. Choose how the CrossMgr's fields should correspond to the column names in your Excel sheet.  The CrossMgr fields are on the first row, and the Excel column names are the drop-downs in the second row.  In the drop-downs, select the Excel column corresponding to the CrossMgr field.
The Excel sheet may contain more fields than CrossMgr uses, and the column names in the sheet do not have to be named the same as CrossMgr's names.  You just have to tell CrossMgr what Excel columns correspond to its fields.  CrossMgr can usually use the same Excel sheet used as the rider sign-on sheet.
1. After the configuration, CrossMgr will show how many records it was able to read from the Excel workbook.

Additional external information will now be shown throughout CrossMgr including in Results, HTML and Excel output.

This option creates a link to the Excel sheet - CrossMgr does not store the Excel data inside CrossMgr.  If data in the Excel sheet changes at any time (before, during or after the race), CrossMgr will automatically pick up the changes and display them the next time the screen is refreshed (for example, after switching between screens).

This allows you to start a race without the full details entered into Excel, or without an Excel sheet entirely.  As the race is underway, you can update the details.

However, if you move the the Excel file, you will have to update the link to tell CrossMgr where to find the new location.

CrossMgr supports the following fields from an external Excel sheet:

Field|Description
:----|:----------
Bib#|Required.  Rider's bib number in the race.  Bib numbers should be allocated in logical number ranges if there are multiple categories in the race (for example, 1-99 = one category, 100-199 = another category, etc.)
LastName|Optional.  Rider's last name.  CrossMgr will automatically capitalize the last name.
FirstName|Optional.  Rider's first name.
Team|Optional.  Rider's team.
Category|Optional.  Rider's category.  This does not have to be the same as the race category.
Age|Optional.  Rider's age.
License|Optional.  Rider' license.  This can be the UCI code, a national code, or a regional code.  CrossMgr uses this for display only.
Tag|Optional for manual input, required for chip input.  Rider's chip tag.
Tag2|Optional.  Rider's additioal chip tag for a second bike.
Factor|Optional.  Athlete's Performance Factor, as a Percent.  Used for Para Cycling to rank athletes with different abilities competing in the same combined event.  The athlete's race time is multiplied by the Factor, yielding an adjusted time.  The athlete's are then ranked by the adjusted times.  The Performance Factor will depend on the athlete's classification, as well as the classifications of the other athlete's in the combined race.  When using Performance Factors, you almost always want to set the "Lapped Riders Continue" option (see [Categories][]).  This is because, after applying the Performance Factors, lapped athletes may still be in contention for winning the combined category.

To save space, CrossMgr may combine the first and last names into one field as "LASTNAME, Firstname".  In the scoreboard, it uses a further shorthand of "LASTNAME, F" where "F" is the first letter of the first name.

## Add DNS from External Excel Data...

Add DNS (Did Not Start) riders quickly and automatically.  This dialog allows you to select all or some riders who are defined in the Excel sheet, but have no data entered during the race.

These riders are likely DNS riders.  Of course, the possibility exists that some of the rides actually started but DNFed (Did Not Finish), were PUL (Pulled) or DQ (Disqualified).  Be mindful of the riders you set as DNF.  Of course, you can always change the status later.

There are a number of buttons on the DNS Manager screen:

Action|Description
:-----|:----------
Category|Select the category.  Default is all categories in the race.
Select All|Select all the potential DNS riders.  You can also manually select by clicking on the rows.  You can multi-select with Shift-Click and Ctrl-Click.
Deselect All|Deselect all the potential DNS riders.  You can also manually deselect by clicking on the rows.  You can multi-deselect with Shift-Click and Ctrl-Click.
DNS Selected|Adds all the selected riders into CrossMgr, and sets the status to DNS (Did Not Start)

Clicking on a column name will sort the potential DNS riders by that column.

Remember Ctrl-Z (Undo) and Ctrl-Y (Redo) if you need to.

## Import Time Trial Start Times...

Imports start times for a time trial from a spreadsheet.
The race must be in TimeTrial mode (see [Properties][]).

The times must be relative to the start of the stopwatch start time, not clock time.  For example, the event starts when the stopwatches start at 00:00:00.
This must also correspondes to when you push the Start Race button in Actions.

The first rider usually leaves a minute or two after the event start time, for example, at 00:01:00.  Subsequent riders leave on 30 second gaps with start times of 00:01:30, 00:02:00, etc.

The spreadsheet must have a Header row, and must have the Bib number and Start Time of the rider as columns.

Again, the times are not "on the clock on the wall", rather, they are relative to what would be seen on a stopwatch started at the beginning of the event.

The procedure for using imported start times is:

+  Create the rider registration sheet in Excel.  This will include the Bib number and other information about the rider including, names, teams, tags, etc.
+  Add a column called "Start Time" to the spreadsheet.
+  Change the Excel format for the column to a HH:MM:SS time format.
+  Change the order of the rows to the start order.  Normally, the fastest riders start at the end.  Pay attention to teammates starting consecutively too, as they may try to work together if they catch each other.
+  When you are satisfied with the start order, set the first rider's start time to "00:01:00".
+  Set the second rider's start time to "00:01:30".
+  Select the "00:01:00" and "00:01:30" cells.
+  Drag the small box at the bottom of the selection down to the last rider.  This will automatically populate the start times on 30 seconds.  You can also use 60 or 20 seconds - whatever you like.
+  Add gaps between categories to latecomers and day-ofs.  Add extra time between the fastest riders.
+  Import the start times into CrossMgr race ahead of time.
+  Get together with the manual timers (or get them on phone/radio) to synchronize CrossMgr and the manual stopwatches.  On a countdown of 5, Start the race, and get everyone to start the stopwatches at the same time.  Remember the Confirm dialog - get it up on the screen first, then press OK.
+  If you mess up pressing, remember that Ctrl-Z will "undo" the start (for safety, it only works 8 seconds after the start).  After undo-ing the start, get everyone to reset, and start the race and stopwatches again.

## Import Course in GPX Format

Imports a .gpx file of the race course.
GPX files are standard files that can be generated from GPS receivers (Garmin, etc.).

The course fill be shown in the Animation screen, as well as in the html web output.

When the GPX file is in use, the animation works a little differently.  The numbers of the top 5 riders are always shown, and the numbers of the Highlight numbers are also shown.

The GPX format contains Latitude/Longitude coordinates, as well as elevations and times.  CrossMgr uses all of this information to make a more realistic animation of the race.

GPX files downloaded from [MapMyRide](http://www.mapmyride.com/) do not contain elevation data.  However, the elevation data can be downloaded separately on the same MapMyRide page to a file called "elevation.csv".  If you wish to use the "elevation.csv" data from [MapMyRide](http://www.mapmyride.com/), save the "elevation.csv" file in the same folder as the GPX file.  CrossMgr will detect it, and pick up the elevation information when it reads the GPX file.

If you select the __Set Category Distances to GPX Lap Length__ in the last screen of the wizard (the default), the Category distances will automatically be filled in with the GPX course length.

### Editing GPX Files

Say you have GPX file from a rider for his entire 8 lap race.  But, CrossMgr requires a GPX for a single lap.  What to do?

Fortunately, there are GPX file editors that allow you to edit a full (for example, [GPX Editor](http://sourceforge.net/projects/gpxeditor/).  If you want to use GPX Editor, download it unzip it into a folder.

GPX Editor has some features that make it easy to edit a multi-lap recording to a single lap.

Open the GPX file.  On the left side of the screen, expand "Tracks".
Then click on the Date entry, then on "Track Segment #1" underneath that.

This shows the track, and brings up an altitude graph at the bottom of the screen.

From the beginning of the altitude graph, hold the left mouse button down and drag to the right.
This selects a part of the path, also showing it in yellow on the screen.

Keep dragging until you select just enough points for the 1st lap.
The first point and lat point do not need to overlap perfectly - CrossMgr will automatically join them to make a circuit.
Depending on whether you have a run up, it might make sense to click-and-drag a middle section of the track.

Then, right-click on your selection in the altitude area.  Choose "Selection|Copy to a new track...".
This make a new track of the single lap called "Track Segment #2".

From the left side of the screen, right-click on "Track Segment #1", and Delete it ("Oui" is french for yes ;).

Then save the file.  Now you have a GPX file with one lap.

### But, I only have a .fit File from a Garmin!

No problem.  You just need to convert it to a GPX file with [GPSBabel](http://www.gpsbabel.org).

1. Download [GPSBabel](http://www.gpsbabel.org).
1. Plug in the Garmin GPS device.  Navigate to the device (it looks like a USB flash drive).  Go to the Activities folder.  There you should find the .fit files.
1. Launch GPSBabel, open the .fit file of the course, then write it out as a .gpx file.
1. Check the .gpx file you just made with [GPX Editor](http://sourceforge.net/projects/gpxeditor/).  See instructions above if it needs to be fixed in some way.

Now, you can import your new .gpx file into CrossMgr.

## Export Course
### ...in GPX Format
Write a GPX file of the course in the same format that CrossMgr reads.  Useful when you want to transfer one GPX course to another CrossMgr race or another application.

### ...as HTML Preview

Creates a course preview web page which includes a Google Map with the course drawn on it as well as an Aligraph (altitude map).
In addition, the page has two buttons:

Button|Action
:-----|:-----
Get Directions|Opens a Google Maps page with the Destination filled in to the Course.
Google Earth Ride|Opens a page showing a 3d course animation - requires the Google Earth plugin.  The animation looks like a helmet camera.

### ...as KMZ Virtual Tour

Creates a KMZ file with an animated fly-over virtual tour of the course.  KMZ file formats are compatible with Google Earth.  CrossMgr launches Google Earth after the download.

To see the virtual tour:

1. Ensure you have [Google Earth](http://www.google.com/earth/index.html) installed.
1. Make sure you have a race with an imported GPX course.
1. From CrossMgr, do "DataMgmt/Export Course.../as KMZ Virtual Tour..."
1. After Google Earth comes up, double-click on name of your Race - look for it in the left column.
1. Then, double-click on "`<Race Name>`: Virtual Tour" (the first entry).
1. Watch the virtual tour of your race in real-time.

## Import Categories from File...
Read the categories from a previously exported Categories file.

## Export Categories to File...
Export the currently defined categories to a file.  This is useful is you find yourself configuring the same categories many times and wish to reuse the same category definitions from one race to another.

## Export History to Excel...
Export the History data to Excel.  This is useful for manual review.

## Export Raw Data as HTML...
Export the raw data of the race into an HTML file.  This is useful for checking input received from a chip timing system, or manual input.
Edited entries are also shown with edit details, however, any missing entries projected by CrossMgr are not included.

Columns in the table are as follows:

Column|Description
:-----|:----------
Sequence Number|Number of the entry
Clock Time|Clock time of the entry
Race Time|Race time of the entry (= Clock Time - Race Start Time)
Bib#|Bib number of the rider
Count|The count of the number of reads for this rider.
Race Cat.|Race category of the rider, if found
Name|"LAST, First" name of the rider (if present in the [External Excel][] sheet)
Team|Team of the rider (if present in the [External Excel][] sheet)
Category|Category of the rider (if present in the [External Excel][] sheet)
License|License of the rider (if present in the [External Excel][] sheet)
Tag|Chip tag associated with the entry (if chip timing, and if present in the [External Excel][] sheet)
Tag2|2nd chip tag associated with the entry (if chip timing and if present in the [External Excel][] sheet)
Edit|Reason for the data edit
By|Username who made the edit (login name on the computer)
On|Date and Time when the edit was made.

